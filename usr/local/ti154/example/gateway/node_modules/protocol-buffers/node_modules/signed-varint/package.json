{
  "name": "signed-varint",
  "description": "efficiently store signed integers in varint",
  "version": "2.0.1",
  "homepage": "https://github.com/dominictarr/signed-varint",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/signed-varint.git"
  },
  "dependencies": {
    "varint": "~5.0.0"
  },
  "devDependencies": {
    "tape": "~2.12.3"
  },
  "scripts": {
    "test": "node test.js"
  },
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "http://dominictarr.com"
  },
  "license": "MIT",
  "readme": "# signed-varint\n\nstore signed integers efficiently, as per protocol-buffers.\n\nFor unsigned integers use\n[varint](https://github.com/chrisdickinson/varint).\n\nIntegers are mapped to positive integers, so that positive integers\nbecome positive even numbers (n*2)\nand negative integers become positive odd numbers. (n*-2 - 1)\n\nThis is the same as moving the sign bit from the most significant\npossition to the least significant. Otherwise, varint will encode\nnegative numbers as large integers.\n\n``` js\nvar varint = require('varint')\nvar svarint = require('signed-varint')\n\nconsole.log('unsigned', varint.encode(-1))\nconsole.log('signed', svarint.encode(-1))\n\n//=> unsigned [255,255,255, 15]\n//   signed [1]\n```\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dominictarr/signed-varint/issues"
  },
  "_id": "signed-varint@2.0.1",
  "dist": {
    "shasum": "f595325d74b8fef8d284594cb617178f070cfac9"
  },
  "_from": "signed-varint@^2.0.0",
  "_resolved": "https://registry.npmjs.org/signed-varint/-/signed-varint-2.0.1.tgz"
}
