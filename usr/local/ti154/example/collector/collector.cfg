;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; @file collector.cfg
;
; @brief TIMAC 2.0 Main application configuration file 
;
; Group: WCS LPC
; $Target Devices: Linux: AM335x, Embedded Devices: CC1310, CC1350$
;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; $License: BSD3 2016 $
;  
;   Copyright (c) 2015, Texas Instruments Incorporated
;   All rights reserved.
;  
;   Redistribution and use in source and binary forms, with or without
;   modification, are permitted provided that the following conditions
;   are met:
;  
;   *  Redistributions of source code must retain the above copyright
;      notice, this list of conditions and the following disclaimer.
;  
;   *  Redistributions in binary form must reproduce the above copyright
;      notice, this list of conditions and the following disclaimer in the
;      documentation and/or other materials provided with the distribution.
;  
;   *  Neither the name of Texas Instruments Incorporated nor the names of
;      its contributors may be used to endorse or promote products derived
;      from this software without specific prior written permission.
;  
;   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
;   THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
;   PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
;   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
;   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
;   OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
;   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
;   OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
;   EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; $Release Name: TI-15.4Stack Linux x64 SDK$
; $Release Date: July 14, 2016 (2.00.00.30)$
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[log]
	; Filename for the log.
	filename = collector_log.txt
	; When developing & debugging it is often helpful to
	; print logs to stderr in addition to the log file
	; Uncomment this if you want to enable that feature.
	; dup2stderr = true
	;
	;----------------------------------------
	; LOG is controled via flags.
	; Each flag = 1 bit in an 64bit value.
	; Each flag has a name, flags are turned on listed
	; A flag can be turned off by adding the keyword: 'not'
	;----------------------------------------
	flag = error
	flag = warning
	flag = fatal
	;----------------------------------------
	; SEE the "ini_flag_name" structures in the application for a list of names
	;----------------------------------------
	; Example (turn the flag FOO on)
	;      flag = FOO
	; Example (turn the flag FOO off)
	;      flag = not-FOO
	;----------------------------------------
	; The flag name 'everything' is magic, it turns on everything.
	; setting all of the log bits to 1.
	; If you want to enable *EVERYTHING* then uncomment this
	;----------------------------------------
	 flag = everything
	;----------------------------------------
	; Sometimes you want EVERYTHING - except some things..
	; names startign with "not-" turn *OFF* the flag 
	; These are good examples to turn off.
	; Uncomment as desired
	 flag = not-sys_dbg_mutex
	 flag = not-sys_dbg_thread
	 flag = not-sys_dbg_fifo
	; flag = not-sys_dbg_uart
	 flag = not-sys_dbg_sleep
	 flag = not-sys_dbg_socket
	 flag = not-nv-debug
	 flag = not-nv-rdwr
	;----------------------------------------

; Configuration for the Gateway interface
[appClient-socket-cfg]
	type = server
	; host = not used
	service = 5000
	; devicename = not used
	server_backlog = 5
	; Limit to inet4, not inet6
	inet = 4
	
; If collector application connects to an NPI SERVER (ie: npi_server2), this is how it connects
[npi-socket-cfg]
	type = client
	host = localhost
	service = 12345
	inet = 4

; If collector app connects directly to a UART (no-npi-server) this is how to connect.
[uart-cfg] 
	;; Launchpads use USB and show up as: /dev/ttyACM0 and ACM1
	;; Solutions using an FTDI or Prolific cable use /dev/ttyUSB0 or USB1
	;; Hard serial ports are: /dev/ttyS0 to ttyS9
	;devname = /dev/ttyUSB1
	devname = /dev/ttyO2
	baudrate = 115200
	; we use the default flags
	flag = default

; When using the UART interface, set the protocol geometry values.
[uart-interface]
	; The embedded device uses a checksum (xor FCS)
	include-chksum = true
	; The mac-co-processor uses a frame sync byte (0xfe)
	frame-sync = true
	; Any message larger then 240 bytes gets fragmented
	fragmentation-size = 240
	; we retry messages at most 3 times
	retry-max = 3
	; Fragmentation times out after 1 second
	fragmentation-timeout-msecs = 1000
	; Inside a message, no gaps larger then 100 mSec
	intersymbol-timeout-msecs = 100
	; The embedded device must respond within 1 Second
	srsp-timeout-msecs = 1000
	; The Embedded device uses a single byte for length
	len-2bytes = false
	; When flushing (tossing) wait for 50mSec to see when the IO is quite
	flush-timeout-msecs = 50
	
; Please refer to the UART-INTERFACE for more details
; This is the protocol specifics when using the NPI-SERVER
[npi-socket-interface]
	; The npi_server2 does not want a checksum
	include-chksum = false
	; The npi_server2 does not expect a frame sync
	frame-sync = false
	; the two byte length message means we do not fragment.
	len-2bytes = true
	; devices must respond to requests in 1 second
	srsp-timeout-msecs = 1000
	; when flushing IO - wait for at least 10mSec of quiet time
	flush-timeout-msecs = 10

; This is the interface to the gateway app
[appClient-socket-interface]
	; The gateway does not expect a checksum
	include-chksum = false
	; the gateway does not expect a frame sync
	frame-sync = false
	; the gateway should respond within 1 second
	srsp-timeout-msecs = 1000
	; Because the gateway use 2 byte length, it does not need fragmentation
	len-2bytes = true
	; when flushing the IO - wat at most 10mSecs
	flush-timeout-msecs = 10
	
[application]
	; Do not reload the NV settings, start fresh each time
	load-nv-sim = true
	;The collector app can use either a socket or uart connection to the co-processor
	;; Alternatively:  'interface = socket' 
	interface = uart
	; Many of the "config-ITEMS" allow for direct configuration 
	; and overriding the 'config.h' default values
	config-auto-start = true
	config-channel-mask = 8
	config-channel-page = 9
	config-coord-short-addr = 0x1234
	config-double-trickle-timer = false
	config-dwell-time = 250
	config-fh-async-channel-mask = all
	config-fh-channel-mask = all
	config-fh-enable = false
	config-fh-netname = "FHTest"
	config-fh-pan-size = 0x0032
	config-linkquality = 1
	config-mac-beacon-order = 15
	config-mac-superframe-order = 15
	config-pan-id = 0xAcDc
	config-percentfilter = 0x0ff
	config-phy-id = 1
	config-scan-duration = 5
	config-secure = true
	config-trickle-max-clk-duration = 960000
	config-trickle-min-clk-duration =  30000
	; msg-dbg-data = apimac-msgs.cfg

	
	
